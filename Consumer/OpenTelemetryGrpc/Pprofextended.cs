// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: opentelemetry/proto/profiles/v1experimental/pprofextended.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenTelemetry.Proto.Profiles.V1Experimental {

  /// <summary>Holder for reflection information generated from opentelemetry/proto/profiles/v1experimental/pprofextended.proto</summary>
  public static partial class PprofextendedReflection {

    #region Descriptor
    /// <summary>File descriptor for opentelemetry/proto/profiles/v1experimental/pprofextended.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PprofextendedReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cj9vcGVudGVsZW1ldHJ5L3Byb3RvL3Byb2ZpbGVzL3YxZXhwZXJpbWVudGFs",
            "L3Bwcm9mZXh0ZW5kZWQucHJvdG8SK29wZW50ZWxlbWV0cnkucHJvdG8ucHJv",
            "ZmlsZXMudjFleHBlcmltZW50YWwaKm9wZW50ZWxlbWV0cnkvcHJvdG8vY29t",
            "bW9uL3YxL2NvbW1vbi5wcm90byLjBgoHUHJvZmlsZRJLCgtzYW1wbGVfdHlw",
            "ZRgBIAMoCzI2Lm9wZW50ZWxlbWV0cnkucHJvdG8ucHJvZmlsZXMudjFleHBl",
            "cmltZW50YWwuVmFsdWVUeXBlEkMKBnNhbXBsZRgCIAMoCzIzLm9wZW50ZWxl",
            "bWV0cnkucHJvdG8ucHJvZmlsZXMudjFleHBlcmltZW50YWwuU2FtcGxlEkUK",
            "B21hcHBpbmcYAyADKAsyNC5vcGVudGVsZW1ldHJ5LnByb3RvLnByb2ZpbGVz",
            "LnYxZXhwZXJpbWVudGFsLk1hcHBpbmcSRwoIbG9jYXRpb24YBCADKAsyNS5v",
            "cGVudGVsZW1ldHJ5LnByb3RvLnByb2ZpbGVzLnYxZXhwZXJpbWVudGFsLkxv",
            "Y2F0aW9uEhgKEGxvY2F0aW9uX2luZGljZXMYDyADKAMSRwoIZnVuY3Rpb24Y",
            "BSADKAsyNS5vcGVudGVsZW1ldHJ5LnByb3RvLnByb2ZpbGVzLnYxZXhwZXJp",
            "bWVudGFsLkZ1bmN0aW9uEkAKD2F0dHJpYnV0ZV90YWJsZRgQIAMoCzInLm9w",
            "ZW50ZWxlbWV0cnkucHJvdG8uY29tbW9uLnYxLktleVZhbHVlElMKD2F0dHJp",
            "YnV0ZV91bml0cxgRIAMoCzI6Lm9wZW50ZWxlbWV0cnkucHJvdG8ucHJvZmls",
            "ZXMudjFleHBlcmltZW50YWwuQXR0cmlidXRlVW5pdBJFCgpsaW5rX3RhYmxl",
            "GBIgAygLMjEub3BlbnRlbGVtZXRyeS5wcm90by5wcm9maWxlcy52MWV4cGVy",
            "aW1lbnRhbC5MaW5rEhQKDHN0cmluZ190YWJsZRgGIAMoCRITCgtkcm9wX2Zy",
            "YW1lcxgHIAEoAxITCgtrZWVwX2ZyYW1lcxgIIAEoAxISCgp0aW1lX25hbm9z",
            "GAkgASgDEhYKDmR1cmF0aW9uX25hbm9zGAogASgDEksKC3BlcmlvZF90eXBl",
            "GAsgASgLMjYub3BlbnRlbGVtZXRyeS5wcm90by5wcm9maWxlcy52MWV4cGVy",
            "aW1lbnRhbC5WYWx1ZVR5cGUSDgoGcGVyaW9kGAwgASgDEg8KB2NvbW1lbnQY",
            "DSADKAMSGwoTZGVmYXVsdF9zYW1wbGVfdHlwZRgOIAEoAyI0Cg1BdHRyaWJ1",
            "dGVVbml0EhUKDWF0dHJpYnV0ZV9rZXkYASABKAMSDAoEdW5pdBgCIAEoAyIp",
            "CgRMaW5rEhAKCHRyYWNlX2lkGAEgASgMEg8KB3NwYW5faWQYAiABKAwijQEK",
            "CVZhbHVlVHlwZRIMCgR0eXBlGAEgASgDEgwKBHVuaXQYAiABKAMSZAoXYWdn",
            "cmVnYXRpb25fdGVtcG9yYWxpdHkYAyABKA4yQy5vcGVudGVsZW1ldHJ5LnBy",
            "b3RvLnByb2ZpbGVzLnYxZXhwZXJpbWVudGFsLkFnZ3JlZ2F0aW9uVGVtcG9y",
            "YWxpdHkiiAIKBlNhbXBsZRIWCg5sb2NhdGlvbl9pbmRleBgBIAMoBBIdChVs",
            "b2NhdGlvbnNfc3RhcnRfaW5kZXgYByABKAQSGAoQbG9jYXRpb25zX2xlbmd0",
            "aBgIIAEoBBIbChNzdGFja3RyYWNlX2lkX2luZGV4GAkgASgNEg0KBXZhbHVl",
            "GAIgAygDEkEKBWxhYmVsGAMgAygLMjIub3BlbnRlbGVtZXRyeS5wcm90by5w",
            "cm9maWxlcy52MWV4cGVyaW1lbnRhbC5MYWJlbBISCgphdHRyaWJ1dGVzGAog",
            "AygEEgwKBGxpbmsYDCABKAQSHAoUdGltZXN0YW1wc191bml4X25hbm8YDSAD",
            "KAQiQAoFTGFiZWwSCwoDa2V5GAEgASgDEgsKA3N0chgCIAEoAxILCgNudW0Y",
            "AyABKAMSEAoIbnVtX3VuaXQYBCABKAMiwgIKB01hcHBpbmcSCgoCaWQYASAB",
            "KAQSFAoMbWVtb3J5X3N0YXJ0GAIgASgEEhQKDG1lbW9yeV9saW1pdBgDIAEo",
            "BBITCgtmaWxlX29mZnNldBgEIAEoBBIQCghmaWxlbmFtZRgFIAEoAxIQCghi",
            "dWlsZF9pZBgGIAEoAxJPCg1idWlsZF9pZF9raW5kGAsgASgOMjgub3BlbnRl",
            "bGVtZXRyeS5wcm90by5wcm9maWxlcy52MWV4cGVyaW1lbnRhbC5CdWlsZElk",
            "S2luZBISCgphdHRyaWJ1dGVzGAwgAygEEhUKDWhhc19mdW5jdGlvbnMYByAB",
            "KAgSFQoNaGFzX2ZpbGVuYW1lcxgIIAEoCBIYChBoYXNfbGluZV9udW1iZXJz",
            "GAkgASgIEhkKEWhhc19pbmxpbmVfZnJhbWVzGAogASgIIroBCghMb2NhdGlv",
            "bhIKCgJpZBgBIAEoBBIVCg1tYXBwaW5nX2luZGV4GAIgASgEEg8KB2FkZHJl",
            "c3MYAyABKAQSPwoEbGluZRgEIAMoCzIxLm9wZW50ZWxlbWV0cnkucHJvdG8u",
            "cHJvZmlsZXMudjFleHBlcmltZW50YWwuTGluZRIRCglpc19mb2xkZWQYBSAB",
            "KAgSEgoKdHlwZV9pbmRleBgGIAEoDRISCgphdHRyaWJ1dGVzGAcgAygEIjwK",
            "BExpbmUSFgoOZnVuY3Rpb25faW5kZXgYASABKAQSDAoEbGluZRgCIAEoAxIO",
            "CgZjb2x1bW4YAyABKAMiXwoIRnVuY3Rpb24SCgoCaWQYASABKAQSDAoEbmFt",
            "ZRgCIAEoAxITCgtzeXN0ZW1fbmFtZRgDIAEoAxIQCghmaWxlbmFtZRgEIAEo",
            "AxISCgpzdGFydF9saW5lGAUgASgDKowBChZBZ2dyZWdhdGlvblRlbXBvcmFs",
            "aXR5EicKI0FHR1JFR0FUSU9OX1RFTVBPUkFMSVRZX1VOU1BFQ0lGSUVEEAAS",
            "IQodQUdHUkVHQVRJT05fVEVNUE9SQUxJVFlfREVMVEEQARImCiJBR0dSRUdB",
            "VElPTl9URU1QT1JBTElUWV9DVU1VTEFUSVZFEAIqPAoLQnVpbGRJZEtpbmQS",
            "EwoPQlVJTERfSURfTElOS0VSEAASGAoUQlVJTERfSURfQklOQVJZX0hBU0gQ",
            "AUJmWjZnby5vcGVudGVsZW1ldHJ5LmlvL3Byb3RvL290bHAvcHJvZmlsZXMv",
            "djFleHBlcmltZW50YWyqAitPcGVuVGVsZW1ldHJ5LlByb3RvLlByb2ZpbGVz",
            "LlYxRXhwZXJpbWVudGFsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OpenTelemetry.Proto.Common.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality), typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Profile), global::OpenTelemetry.Proto.Profiles.V1Experimental.Profile.Parser, new[]{ "SampleType", "Sample", "Mapping", "Location", "LocationIndices", "Function", "AttributeTable", "AttributeUnits", "LinkTable", "StringTable", "DropFrames", "KeepFrames", "TimeNanos", "DurationNanos", "PeriodType", "Period", "Comment", "DefaultSampleType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.AttributeUnit), global::OpenTelemetry.Proto.Profiles.V1Experimental.AttributeUnit.Parser, new[]{ "AttributeKey", "Unit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Link), global::OpenTelemetry.Proto.Profiles.V1Experimental.Link.Parser, new[]{ "TraceId", "SpanId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType), global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType.Parser, new[]{ "Type", "Unit", "AggregationTemporality" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Sample), global::OpenTelemetry.Proto.Profiles.V1Experimental.Sample.Parser, new[]{ "LocationIndex", "LocationsStartIndex", "LocationsLength", "StacktraceIdIndex", "Value", "Label", "Attributes", "Link", "TimestampsUnixNano" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Label), global::OpenTelemetry.Proto.Profiles.V1Experimental.Label.Parser, new[]{ "Key", "Str", "Num", "NumUnit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Mapping), global::OpenTelemetry.Proto.Profiles.V1Experimental.Mapping.Parser, new[]{ "Id", "MemoryStart", "MemoryLimit", "FileOffset", "Filename", "BuildId", "BuildIdKind", "Attributes", "HasFunctions", "HasFilenames", "HasLineNumbers", "HasInlineFrames" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Location), global::OpenTelemetry.Proto.Profiles.V1Experimental.Location.Parser, new[]{ "Id", "MappingIndex", "Address", "Line", "IsFolded", "TypeIndex", "Attributes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Line), global::OpenTelemetry.Proto.Profiles.V1Experimental.Line.Parser, new[]{ "FunctionIndex", "Line_", "Column" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenTelemetry.Proto.Profiles.V1Experimental.Function), global::OpenTelemetry.Proto.Profiles.V1Experimental.Function.Parser, new[]{ "Id", "Name", "SystemName", "Filename", "StartLine" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Specifies the method of aggregating metric values, either DELTA (change since last report)
  /// or CUMULATIVE (total since a fixed start time).
  /// </summary>
  public enum AggregationTemporality {
    /// <summary>
    /// UNSPECIFIED is the default AggregationTemporality, it MUST not be used. 
    /// </summary>
    [pbr::OriginalName("AGGREGATION_TEMPORALITY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///* DELTA is an AggregationTemporality for a profiler which reports
    ///changes since last report time. Successive metrics contain aggregation of
    ///values from continuous and non-overlapping intervals.
    ///
    ///The values for a DELTA metric are based only on the time interval
    ///associated with one measurement cycle. There is no dependency on
    ///previous measurements like is the case for CUMULATIVE metrics.
    ///
    ///For example, consider a system measuring the number of requests that
    ///it receives and reports the sum of these requests every second as a
    ///DELTA metric:
    ///
    ///1. The system starts receiving at time=t_0.
    ///2. A request is received, the system measures 1 request.
    ///3. A request is received, the system measures 1 request.
    ///4. A request is received, the system measures 1 request.
    ///5. The 1 second collection cycle ends. A metric is exported for the
    ///number of requests received over the interval of time t_0 to
    ///t_0+1 with a value of 3.
    ///6. A request is received, the system measures 1 request.
    ///7. A request is received, the system measures 1 request.
    ///8. The 1 second collection cycle ends. A metric is exported for the
    ///number of requests received over the interval of time t_0+1 to
    ///t_0+2 with a value of 2. 
    /// </summary>
    [pbr::OriginalName("AGGREGATION_TEMPORALITY_DELTA")] Delta = 1,
    /// <summary>
    ///* CUMULATIVE is an AggregationTemporality for a profiler which
    ///reports changes since a fixed start time. This means that current values
    ///of a CUMULATIVE metric depend on all previous measurements since the
    ///start time. Because of this, the sender is required to retain this state
    ///in some form. If this state is lost or invalidated, the CUMULATIVE metric
    ///values MUST be reset and a new fixed start time following the last
    ///reported measurement time sent MUST be used.
    ///
    ///For example, consider a system measuring the number of requests that
    ///it receives and reports the sum of these requests every second as a
    ///CUMULATIVE metric:
    ///
    ///1. The system starts receiving at time=t_0.
    ///2. A request is received, the system measures 1 request.
    ///3. A request is received, the system measures 1 request.
    ///4. A request is received, the system measures 1 request.
    ///5. The 1 second collection cycle ends. A metric is exported for the
    ///number of requests received over the interval of time t_0 to
    ///t_0+1 with a value of 3.
    ///6. A request is received, the system measures 1 request.
    ///7. A request is received, the system measures 1 request.
    ///8. The 1 second collection cycle ends. A metric is exported for the
    ///number of requests received over the interval of time t_0 to
    ///t_0+2 with a value of 5.
    ///9. The system experiences a fault and loses state.
    ///10. The system recovers and resumes receiving at time=t_1.
    ///11. A request is received, the system measures 1 request.
    ///12. The 1 second collection cycle ends. A metric is exported for the
    ///number of requests received over the interval of time t_1 to
    ///t_0+1 with a value of 1.
    ///
    ///Note: Even though, when reporting changes since last report time, using
    ///CUMULATIVE is valid, it is not recommended. 
    /// </summary>
    [pbr::OriginalName("AGGREGATION_TEMPORALITY_CUMULATIVE")] Cumulative = 2,
  }

  /// <summary>
  /// Indicates the semantics of the build_id field.
  /// </summary>
  public enum BuildIdKind {
    /// <summary>
    /// Linker-generated build ID, stored in the ELF binary notes.
    /// </summary>
    [pbr::OriginalName("BUILD_ID_LINKER")] BuildIdLinker = 0,
    /// <summary>
    /// Build ID based on the content hash of the binary. Currently no particular
    /// hashing approach is standardized, so a given producer needs to define it
    /// themselves and thus unlike BUILD_ID_LINKER this kind of hash is producer-specific.
    /// We may choose to provide a standardized stable hash recommendation later.
    /// </summary>
    [pbr::OriginalName("BUILD_ID_BINARY_HASH")] BuildIdBinaryHash = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Represents a complete profile, including sample types, samples,
  /// mappings to binaries, locations, functions, string table, and additional metadata.
  /// </summary>
  public sealed partial class Profile : pb::IMessage<Profile>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Profile> _parser = new pb::MessageParser<Profile>(() => new Profile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Profile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Profile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Profile(Profile other) : this() {
      sampleType_ = other.sampleType_.Clone();
      sample_ = other.sample_.Clone();
      mapping_ = other.mapping_.Clone();
      location_ = other.location_.Clone();
      locationIndices_ = other.locationIndices_.Clone();
      function_ = other.function_.Clone();
      attributeTable_ = other.attributeTable_.Clone();
      attributeUnits_ = other.attributeUnits_.Clone();
      linkTable_ = other.linkTable_.Clone();
      stringTable_ = other.stringTable_.Clone();
      dropFrames_ = other.dropFrames_;
      keepFrames_ = other.keepFrames_;
      timeNanos_ = other.timeNanos_;
      durationNanos_ = other.durationNanos_;
      periodType_ = other.periodType_ != null ? other.periodType_.Clone() : null;
      period_ = other.period_;
      comment_ = other.comment_.Clone();
      defaultSampleType_ = other.defaultSampleType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Profile Clone() {
      return new Profile(this);
    }

    /// <summary>Field number for the "sample_type" field.</summary>
    public const int SampleTypeFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType> _repeated_sampleType_codec
        = pb::FieldCodec.ForMessage(10, global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType> sampleType_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType>();
    /// <summary>
    /// A description of the samples associated with each Sample.value.
    /// For a cpu profile this might be:
    ///   [["cpu","nanoseconds"]] or [["wall","seconds"]] or [["syscall","count"]]
    /// For a heap profile, this might be:
    ///   [["allocations","count"], ["space","bytes"]],
    /// If one of the values represents the number of events represented
    /// by the sample, by convention it should be at index 0 and use
    /// sample_type.unit == "count".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType> SampleType {
      get { return sampleType_; }
    }

    /// <summary>Field number for the "sample" field.</summary>
    public const int SampleFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.Sample> _repeated_sample_codec
        = pb::FieldCodec.ForMessage(18, global::OpenTelemetry.Proto.Profiles.V1Experimental.Sample.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Sample> sample_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Sample>();
    /// <summary>
    /// The set of samples recorded in this profile.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Sample> Sample {
      get { return sample_; }
    }

    /// <summary>Field number for the "mapping" field.</summary>
    public const int MappingFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.Mapping> _repeated_mapping_codec
        = pb::FieldCodec.ForMessage(26, global::OpenTelemetry.Proto.Profiles.V1Experimental.Mapping.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Mapping> mapping_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Mapping>();
    /// <summary>
    /// Mapping from address ranges to the image/binary/library mapped
    /// into that address range.  mapping[0] will be the main binary.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Mapping> Mapping {
      get { return mapping_; }
    }

    /// <summary>Field number for the "location" field.</summary>
    public const int LocationFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.Location> _repeated_location_codec
        = pb::FieldCodec.ForMessage(34, global::OpenTelemetry.Proto.Profiles.V1Experimental.Location.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Location> location_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Location>();
    /// <summary>
    /// Locations referenced by samples via location_indices.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Location> Location {
      get { return location_; }
    }

    /// <summary>Field number for the "location_indices" field.</summary>
    public const int LocationIndicesFieldNumber = 15;
    private static readonly pb::FieldCodec<long> _repeated_locationIndices_codec
        = pb::FieldCodec.ForInt64(122);
    private readonly pbc::RepeatedField<long> locationIndices_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Array of locations referenced by samples.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> LocationIndices {
      get { return locationIndices_; }
    }

    /// <summary>Field number for the "function" field.</summary>
    public const int FunctionFieldNumber = 5;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.Function> _repeated_function_codec
        = pb::FieldCodec.ForMessage(42, global::OpenTelemetry.Proto.Profiles.V1Experimental.Function.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Function> function_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Function>();
    /// <summary>
    /// Functions referenced by locations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Function> Function {
      get { return function_; }
    }

    /// <summary>Field number for the "attribute_table" field.</summary>
    public const int AttributeTableFieldNumber = 16;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Common.V1.KeyValue> _repeated_attributeTable_codec
        = pb::FieldCodec.ForMessage(130, global::OpenTelemetry.Proto.Common.V1.KeyValue.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Common.V1.KeyValue> attributeTable_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Common.V1.KeyValue>();
    /// <summary>
    /// Lookup table for attributes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Common.V1.KeyValue> AttributeTable {
      get { return attributeTable_; }
    }

    /// <summary>Field number for the "attribute_units" field.</summary>
    public const int AttributeUnitsFieldNumber = 17;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.AttributeUnit> _repeated_attributeUnits_codec
        = pb::FieldCodec.ForMessage(138, global::OpenTelemetry.Proto.Profiles.V1Experimental.AttributeUnit.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.AttributeUnit> attributeUnits_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.AttributeUnit>();
    /// <summary>
    /// Represents a mapping between Attribute Keys and Units.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.AttributeUnit> AttributeUnits {
      get { return attributeUnits_; }
    }

    /// <summary>Field number for the "link_table" field.</summary>
    public const int LinkTableFieldNumber = 18;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.Link> _repeated_linkTable_codec
        = pb::FieldCodec.ForMessage(146, global::OpenTelemetry.Proto.Profiles.V1Experimental.Link.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Link> linkTable_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Link>();
    /// <summary>
    /// Lookup table for links.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Link> LinkTable {
      get { return linkTable_; }
    }

    /// <summary>Field number for the "string_table" field.</summary>
    public const int StringTableFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_stringTable_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> stringTable_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A common table for strings referenced by various messages.
    /// string_table[0] must always be "".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> StringTable {
      get { return stringTable_; }
    }

    /// <summary>Field number for the "drop_frames" field.</summary>
    public const int DropFramesFieldNumber = 7;
    private long dropFrames_;
    /// <summary>
    /// frames with Function.function_name fully matching the following
    /// regexp will be dropped from the samples, along with their successors.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DropFrames {
      get { return dropFrames_; }
      set {
        dropFrames_ = value;
      }
    }

    /// <summary>Field number for the "keep_frames" field.</summary>
    public const int KeepFramesFieldNumber = 8;
    private long keepFrames_;
    /// <summary>
    /// frames with Function.function_name fully matching the following
    /// regexp will be kept, even if it matches drop_frames.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KeepFrames {
      get { return keepFrames_; }
      set {
        keepFrames_ = value;
      }
    }

    /// <summary>Field number for the "time_nanos" field.</summary>
    public const int TimeNanosFieldNumber = 9;
    private long timeNanos_;
    /// <summary>
    /// Time of collection (UTC) represented as nanoseconds past the epoch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TimeNanos {
      get { return timeNanos_; }
      set {
        timeNanos_ = value;
      }
    }

    /// <summary>Field number for the "duration_nanos" field.</summary>
    public const int DurationNanosFieldNumber = 10;
    private long durationNanos_;
    /// <summary>
    /// Duration of the profile, if a duration makes sense.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DurationNanos {
      get { return durationNanos_; }
      set {
        durationNanos_ = value;
      }
    }

    /// <summary>Field number for the "period_type" field.</summary>
    public const int PeriodTypeFieldNumber = 11;
    private global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType periodType_;
    /// <summary>
    /// The kind of events between sampled occurrences.
    /// e.g [ "cpu","cycles" ] or [ "heap","bytes" ]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType PeriodType {
      get { return periodType_; }
      set {
        periodType_ = value;
      }
    }

    /// <summary>Field number for the "period" field.</summary>
    public const int PeriodFieldNumber = 12;
    private long period_;
    /// <summary>
    /// The number of events between sampled occurrences.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Period {
      get { return period_; }
      set {
        period_ = value;
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 13;
    private static readonly pb::FieldCodec<long> _repeated_comment_codec
        = pb::FieldCodec.ForInt64(106);
    private readonly pbc::RepeatedField<long> comment_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// Free-form text associated with the profile. The text is displayed as is
    /// to the user by the tools that read profiles (e.g. by pprof). This field
    /// should not be used to store any machine-readable information, it is only
    /// for human-friendly content. The profile must stay functional if this field
    /// is cleaned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Comment {
      get { return comment_; }
    }

    /// <summary>Field number for the "default_sample_type" field.</summary>
    public const int DefaultSampleTypeFieldNumber = 14;
    private long defaultSampleType_;
    /// <summary>
    /// Index into the string table of the type of the preferred sample
    /// value. If unset, clients should default to the last sample value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DefaultSampleType {
      get { return defaultSampleType_; }
      set {
        defaultSampleType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Profile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Profile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sampleType_.Equals(other.sampleType_)) return false;
      if(!sample_.Equals(other.sample_)) return false;
      if(!mapping_.Equals(other.mapping_)) return false;
      if(!location_.Equals(other.location_)) return false;
      if(!locationIndices_.Equals(other.locationIndices_)) return false;
      if(!function_.Equals(other.function_)) return false;
      if(!attributeTable_.Equals(other.attributeTable_)) return false;
      if(!attributeUnits_.Equals(other.attributeUnits_)) return false;
      if(!linkTable_.Equals(other.linkTable_)) return false;
      if(!stringTable_.Equals(other.stringTable_)) return false;
      if (DropFrames != other.DropFrames) return false;
      if (KeepFrames != other.KeepFrames) return false;
      if (TimeNanos != other.TimeNanos) return false;
      if (DurationNanos != other.DurationNanos) return false;
      if (!object.Equals(PeriodType, other.PeriodType)) return false;
      if (Period != other.Period) return false;
      if(!comment_.Equals(other.comment_)) return false;
      if (DefaultSampleType != other.DefaultSampleType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sampleType_.GetHashCode();
      hash ^= sample_.GetHashCode();
      hash ^= mapping_.GetHashCode();
      hash ^= location_.GetHashCode();
      hash ^= locationIndices_.GetHashCode();
      hash ^= function_.GetHashCode();
      hash ^= attributeTable_.GetHashCode();
      hash ^= attributeUnits_.GetHashCode();
      hash ^= linkTable_.GetHashCode();
      hash ^= stringTable_.GetHashCode();
      if (DropFrames != 0L) hash ^= DropFrames.GetHashCode();
      if (KeepFrames != 0L) hash ^= KeepFrames.GetHashCode();
      if (TimeNanos != 0L) hash ^= TimeNanos.GetHashCode();
      if (DurationNanos != 0L) hash ^= DurationNanos.GetHashCode();
      if (periodType_ != null) hash ^= PeriodType.GetHashCode();
      if (Period != 0L) hash ^= Period.GetHashCode();
      hash ^= comment_.GetHashCode();
      if (DefaultSampleType != 0L) hash ^= DefaultSampleType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sampleType_.WriteTo(output, _repeated_sampleType_codec);
      sample_.WriteTo(output, _repeated_sample_codec);
      mapping_.WriteTo(output, _repeated_mapping_codec);
      location_.WriteTo(output, _repeated_location_codec);
      function_.WriteTo(output, _repeated_function_codec);
      stringTable_.WriteTo(output, _repeated_stringTable_codec);
      if (DropFrames != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DropFrames);
      }
      if (KeepFrames != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(KeepFrames);
      }
      if (TimeNanos != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TimeNanos);
      }
      if (DurationNanos != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(DurationNanos);
      }
      if (periodType_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PeriodType);
      }
      if (Period != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Period);
      }
      comment_.WriteTo(output, _repeated_comment_codec);
      if (DefaultSampleType != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(DefaultSampleType);
      }
      locationIndices_.WriteTo(output, _repeated_locationIndices_codec);
      attributeTable_.WriteTo(output, _repeated_attributeTable_codec);
      attributeUnits_.WriteTo(output, _repeated_attributeUnits_codec);
      linkTable_.WriteTo(output, _repeated_linkTable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sampleType_.WriteTo(ref output, _repeated_sampleType_codec);
      sample_.WriteTo(ref output, _repeated_sample_codec);
      mapping_.WriteTo(ref output, _repeated_mapping_codec);
      location_.WriteTo(ref output, _repeated_location_codec);
      function_.WriteTo(ref output, _repeated_function_codec);
      stringTable_.WriteTo(ref output, _repeated_stringTable_codec);
      if (DropFrames != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DropFrames);
      }
      if (KeepFrames != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(KeepFrames);
      }
      if (TimeNanos != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(TimeNanos);
      }
      if (DurationNanos != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(DurationNanos);
      }
      if (periodType_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(PeriodType);
      }
      if (Period != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Period);
      }
      comment_.WriteTo(ref output, _repeated_comment_codec);
      if (DefaultSampleType != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(DefaultSampleType);
      }
      locationIndices_.WriteTo(ref output, _repeated_locationIndices_codec);
      attributeTable_.WriteTo(ref output, _repeated_attributeTable_codec);
      attributeUnits_.WriteTo(ref output, _repeated_attributeUnits_codec);
      linkTable_.WriteTo(ref output, _repeated_linkTable_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sampleType_.CalculateSize(_repeated_sampleType_codec);
      size += sample_.CalculateSize(_repeated_sample_codec);
      size += mapping_.CalculateSize(_repeated_mapping_codec);
      size += location_.CalculateSize(_repeated_location_codec);
      size += locationIndices_.CalculateSize(_repeated_locationIndices_codec);
      size += function_.CalculateSize(_repeated_function_codec);
      size += attributeTable_.CalculateSize(_repeated_attributeTable_codec);
      size += attributeUnits_.CalculateSize(_repeated_attributeUnits_codec);
      size += linkTable_.CalculateSize(_repeated_linkTable_codec);
      size += stringTable_.CalculateSize(_repeated_stringTable_codec);
      if (DropFrames != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DropFrames);
      }
      if (KeepFrames != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KeepFrames);
      }
      if (TimeNanos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TimeNanos);
      }
      if (DurationNanos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DurationNanos);
      }
      if (periodType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PeriodType);
      }
      if (Period != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Period);
      }
      size += comment_.CalculateSize(_repeated_comment_codec);
      if (DefaultSampleType != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DefaultSampleType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Profile other) {
      if (other == null) {
        return;
      }
      sampleType_.Add(other.sampleType_);
      sample_.Add(other.sample_);
      mapping_.Add(other.mapping_);
      location_.Add(other.location_);
      locationIndices_.Add(other.locationIndices_);
      function_.Add(other.function_);
      attributeTable_.Add(other.attributeTable_);
      attributeUnits_.Add(other.attributeUnits_);
      linkTable_.Add(other.linkTable_);
      stringTable_.Add(other.stringTable_);
      if (other.DropFrames != 0L) {
        DropFrames = other.DropFrames;
      }
      if (other.KeepFrames != 0L) {
        KeepFrames = other.KeepFrames;
      }
      if (other.TimeNanos != 0L) {
        TimeNanos = other.TimeNanos;
      }
      if (other.DurationNanos != 0L) {
        DurationNanos = other.DurationNanos;
      }
      if (other.periodType_ != null) {
        if (periodType_ == null) {
          PeriodType = new global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType();
        }
        PeriodType.MergeFrom(other.PeriodType);
      }
      if (other.Period != 0L) {
        Period = other.Period;
      }
      comment_.Add(other.comment_);
      if (other.DefaultSampleType != 0L) {
        DefaultSampleType = other.DefaultSampleType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sampleType_.AddEntriesFrom(input, _repeated_sampleType_codec);
            break;
          }
          case 18: {
            sample_.AddEntriesFrom(input, _repeated_sample_codec);
            break;
          }
          case 26: {
            mapping_.AddEntriesFrom(input, _repeated_mapping_codec);
            break;
          }
          case 34: {
            location_.AddEntriesFrom(input, _repeated_location_codec);
            break;
          }
          case 42: {
            function_.AddEntriesFrom(input, _repeated_function_codec);
            break;
          }
          case 50: {
            stringTable_.AddEntriesFrom(input, _repeated_stringTable_codec);
            break;
          }
          case 56: {
            DropFrames = input.ReadInt64();
            break;
          }
          case 64: {
            KeepFrames = input.ReadInt64();
            break;
          }
          case 72: {
            TimeNanos = input.ReadInt64();
            break;
          }
          case 80: {
            DurationNanos = input.ReadInt64();
            break;
          }
          case 90: {
            if (periodType_ == null) {
              PeriodType = new global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType();
            }
            input.ReadMessage(PeriodType);
            break;
          }
          case 96: {
            Period = input.ReadInt64();
            break;
          }
          case 106:
          case 104: {
            comment_.AddEntriesFrom(input, _repeated_comment_codec);
            break;
          }
          case 112: {
            DefaultSampleType = input.ReadInt64();
            break;
          }
          case 122:
          case 120: {
            locationIndices_.AddEntriesFrom(input, _repeated_locationIndices_codec);
            break;
          }
          case 130: {
            attributeTable_.AddEntriesFrom(input, _repeated_attributeTable_codec);
            break;
          }
          case 138: {
            attributeUnits_.AddEntriesFrom(input, _repeated_attributeUnits_codec);
            break;
          }
          case 146: {
            linkTable_.AddEntriesFrom(input, _repeated_linkTable_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sampleType_.AddEntriesFrom(ref input, _repeated_sampleType_codec);
            break;
          }
          case 18: {
            sample_.AddEntriesFrom(ref input, _repeated_sample_codec);
            break;
          }
          case 26: {
            mapping_.AddEntriesFrom(ref input, _repeated_mapping_codec);
            break;
          }
          case 34: {
            location_.AddEntriesFrom(ref input, _repeated_location_codec);
            break;
          }
          case 42: {
            function_.AddEntriesFrom(ref input, _repeated_function_codec);
            break;
          }
          case 50: {
            stringTable_.AddEntriesFrom(ref input, _repeated_stringTable_codec);
            break;
          }
          case 56: {
            DropFrames = input.ReadInt64();
            break;
          }
          case 64: {
            KeepFrames = input.ReadInt64();
            break;
          }
          case 72: {
            TimeNanos = input.ReadInt64();
            break;
          }
          case 80: {
            DurationNanos = input.ReadInt64();
            break;
          }
          case 90: {
            if (periodType_ == null) {
              PeriodType = new global::OpenTelemetry.Proto.Profiles.V1Experimental.ValueType();
            }
            input.ReadMessage(PeriodType);
            break;
          }
          case 96: {
            Period = input.ReadInt64();
            break;
          }
          case 106:
          case 104: {
            comment_.AddEntriesFrom(ref input, _repeated_comment_codec);
            break;
          }
          case 112: {
            DefaultSampleType = input.ReadInt64();
            break;
          }
          case 122:
          case 120: {
            locationIndices_.AddEntriesFrom(ref input, _repeated_locationIndices_codec);
            break;
          }
          case 130: {
            attributeTable_.AddEntriesFrom(ref input, _repeated_attributeTable_codec);
            break;
          }
          case 138: {
            attributeUnits_.AddEntriesFrom(ref input, _repeated_attributeUnits_codec);
            break;
          }
          case 146: {
            linkTable_.AddEntriesFrom(ref input, _repeated_linkTable_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Represents a mapping between Attribute Keys and Units.
  /// </summary>
  public sealed partial class AttributeUnit : pb::IMessage<AttributeUnit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AttributeUnit> _parser = new pb::MessageParser<AttributeUnit>(() => new AttributeUnit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AttributeUnit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AttributeUnit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AttributeUnit(AttributeUnit other) : this() {
      attributeKey_ = other.attributeKey_;
      unit_ = other.unit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AttributeUnit Clone() {
      return new AttributeUnit(this);
    }

    /// <summary>Field number for the "attribute_key" field.</summary>
    public const int AttributeKeyFieldNumber = 1;
    private long attributeKey_;
    /// <summary>
    /// Index into string table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AttributeKey {
      get { return attributeKey_; }
      set {
        attributeKey_ = value;
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 2;
    private long unit_;
    /// <summary>
    /// Index into string table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Unit {
      get { return unit_; }
      set {
        unit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AttributeUnit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AttributeUnit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AttributeKey != other.AttributeKey) return false;
      if (Unit != other.Unit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AttributeKey != 0L) hash ^= AttributeKey.GetHashCode();
      if (Unit != 0L) hash ^= Unit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AttributeKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AttributeKey);
      }
      if (Unit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AttributeKey != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AttributeKey);
      }
      if (Unit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AttributeKey != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AttributeKey);
      }
      if (Unit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AttributeUnit other) {
      if (other == null) {
        return;
      }
      if (other.AttributeKey != 0L) {
        AttributeKey = other.AttributeKey;
      }
      if (other.Unit != 0L) {
        Unit = other.Unit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AttributeKey = input.ReadInt64();
            break;
          }
          case 16: {
            Unit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AttributeKey = input.ReadInt64();
            break;
          }
          case 16: {
            Unit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A pointer from a profile Sample to a trace Span.
  /// Connects a profile sample to a trace span, identified by unique trace and span IDs.
  /// </summary>
  public sealed partial class Link : pb::IMessage<Link>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Link> _parser = new pb::MessageParser<Link>(() => new Link());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Link> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Link() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Link(Link other) : this() {
      traceId_ = other.traceId_;
      spanId_ = other.spanId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Link Clone() {
      return new Link(this);
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 1;
    private pb::ByteString traceId_ = pb::ByteString.Empty;
    /// <summary>
    /// A unique identifier of a trace that this linked span is part of. The ID is a
    /// 16-byte array.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString TraceId {
      get { return traceId_; }
      set {
        traceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "span_id" field.</summary>
    public const int SpanIdFieldNumber = 2;
    private pb::ByteString spanId_ = pb::ByteString.Empty;
    /// <summary>
    /// A unique identifier for the linked span. The ID is an 8-byte array.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString SpanId {
      get { return spanId_; }
      set {
        spanId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Link);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Link other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TraceId != other.TraceId) return false;
      if (SpanId != other.SpanId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TraceId.Length != 0) hash ^= TraceId.GetHashCode();
      if (SpanId.Length != 0) hash ^= SpanId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TraceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TraceId);
      }
      if (SpanId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SpanId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TraceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TraceId);
      }
      if (SpanId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(SpanId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TraceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TraceId);
      }
      if (SpanId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(SpanId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Link other) {
      if (other == null) {
        return;
      }
      if (other.TraceId.Length != 0) {
        TraceId = other.TraceId;
      }
      if (other.SpanId.Length != 0) {
        SpanId = other.SpanId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TraceId = input.ReadBytes();
            break;
          }
          case 18: {
            SpanId = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TraceId = input.ReadBytes();
            break;
          }
          case 18: {
            SpanId = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// ValueType describes the type and units of a value, with an optional aggregation temporality.
  /// </summary>
  public sealed partial class ValueType : pb::IMessage<ValueType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValueType> _parser = new pb::MessageParser<ValueType>(() => new ValueType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValueType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValueType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValueType(ValueType other) : this() {
      type_ = other.type_;
      unit_ = other.unit_;
      aggregationTemporality_ = other.aggregationTemporality_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValueType Clone() {
      return new ValueType(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private long type_;
    /// <summary>
    /// Index into string table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "unit" field.</summary>
    public const int UnitFieldNumber = 2;
    private long unit_;
    /// <summary>
    /// Index into string table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Unit {
      get { return unit_; }
      set {
        unit_ = value;
      }
    }

    /// <summary>Field number for the "aggregation_temporality" field.</summary>
    public const int AggregationTemporalityFieldNumber = 3;
    private global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality aggregationTemporality_ = global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality AggregationTemporality {
      get { return aggregationTemporality_; }
      set {
        aggregationTemporality_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValueType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValueType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Unit != other.Unit) return false;
      if (AggregationTemporality != other.AggregationTemporality) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0L) hash ^= Type.GetHashCode();
      if (Unit != 0L) hash ^= Unit.GetHashCode();
      if (AggregationTemporality != global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality.Unspecified) hash ^= AggregationTemporality.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Type);
      }
      if (Unit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Unit);
      }
      if (AggregationTemporality != global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AggregationTemporality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Type);
      }
      if (Unit != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Unit);
      }
      if (AggregationTemporality != global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AggregationTemporality);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Type);
      }
      if (Unit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Unit);
      }
      if (AggregationTemporality != global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AggregationTemporality);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValueType other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0L) {
        Type = other.Type;
      }
      if (other.Unit != 0L) {
        Unit = other.Unit;
      }
      if (other.AggregationTemporality != global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality.Unspecified) {
        AggregationTemporality = other.AggregationTemporality;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = input.ReadInt64();
            break;
          }
          case 16: {
            Unit = input.ReadInt64();
            break;
          }
          case 24: {
            AggregationTemporality = (global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = input.ReadInt64();
            break;
          }
          case 16: {
            Unit = input.ReadInt64();
            break;
          }
          case 24: {
            AggregationTemporality = (global::OpenTelemetry.Proto.Profiles.V1Experimental.AggregationTemporality) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Each Sample records values encountered in some program
  /// context. The program context is typically a stack trace, perhaps
  /// augmented with auxiliary information like the thread-id, some
  /// indicator of a higher level request being handled etc.
  /// </summary>
  public sealed partial class Sample : pb::IMessage<Sample>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sample> _parser = new pb::MessageParser<Sample>(() => new Sample());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Sample> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sample() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sample(Sample other) : this() {
      locationIndex_ = other.locationIndex_.Clone();
      locationsStartIndex_ = other.locationsStartIndex_;
      locationsLength_ = other.locationsLength_;
      stacktraceIdIndex_ = other.stacktraceIdIndex_;
      value_ = other.value_.Clone();
      label_ = other.label_.Clone();
      attributes_ = other.attributes_.Clone();
      link_ = other.link_;
      timestampsUnixNano_ = other.timestampsUnixNano_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sample Clone() {
      return new Sample(this);
    }

    /// <summary>Field number for the "location_index" field.</summary>
    public const int LocationIndexFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_locationIndex_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> locationIndex_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// The indices recorded here correspond to locations in Profile.location.
    /// The leaf is at location_index[0]. [deprecated, superseded by locations_start_index / locations_length]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> LocationIndex {
      get { return locationIndex_; }
    }

    /// <summary>Field number for the "locations_start_index" field.</summary>
    public const int LocationsStartIndexFieldNumber = 7;
    private ulong locationsStartIndex_;
    /// <summary>
    /// locations_start_index along with locations_length refers to to a slice of locations in Profile.location.
    /// Supersedes location_index.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LocationsStartIndex {
      get { return locationsStartIndex_; }
      set {
        locationsStartIndex_ = value;
      }
    }

    /// <summary>Field number for the "locations_length" field.</summary>
    public const int LocationsLengthFieldNumber = 8;
    private ulong locationsLength_;
    /// <summary>
    /// locations_length along with locations_start_index refers to a slice of locations in Profile.location.
    /// Supersedes location_index.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LocationsLength {
      get { return locationsLength_; }
      set {
        locationsLength_ = value;
      }
    }

    /// <summary>Field number for the "stacktrace_id_index" field.</summary>
    public const int StacktraceIdIndexFieldNumber = 9;
    private uint stacktraceIdIndex_;
    /// <summary>
    /// A 128bit id that uniquely identifies this stacktrace, globally. Index into string table. [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint StacktraceIdIndex {
      get { return stacktraceIdIndex_; }
      set {
        stacktraceIdIndex_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<long> _repeated_value_codec
        = pb::FieldCodec.ForInt64(18);
    private readonly pbc::RepeatedField<long> value_ = new pbc::RepeatedField<long>();
    /// <summary>
    /// The type and unit of each value is defined by the corresponding
    /// entry in Profile.sample_type. All samples must have the same
    /// number of values, the same as the length of Profile.sample_type.
    /// When aggregating multiple samples into a single sample, the
    /// result has a list of values that is the element-wise sum of the
    /// lists of the originals.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> Value {
      get { return value_; }
    }

    /// <summary>Field number for the "label" field.</summary>
    public const int LabelFieldNumber = 3;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.Label> _repeated_label_codec
        = pb::FieldCodec.ForMessage(26, global::OpenTelemetry.Proto.Profiles.V1Experimental.Label.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Label> label_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Label>();
    /// <summary>
    /// label includes additional context for this sample. It can include
    /// things like a thread id, allocation size, etc.
    ///
    /// NOTE: While possible, having multiple values for the same label key is
    /// strongly discouraged and should never be used. Most tools (e.g. pprof) do
    /// not have good (or any) support for multi-value labels. And an even more
    /// discouraged case is having a string label and a numeric label of the same
    /// name on a sample.  Again, possible to express, but should not be used.
    /// [deprecated, superseded by attributes]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Label> Label {
      get { return label_; }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 10;
    private static readonly pb::FieldCodec<ulong> _repeated_attributes_codec
        = pb::FieldCodec.ForUInt64(82);
    private readonly pbc::RepeatedField<ulong> attributes_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// References to attributes in Profile.attribute_table. [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 12;
    private ulong link_;
    /// <summary>
    /// Reference to link in Profile.link_table. [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Link {
      get { return link_; }
      set {
        link_ = value;
      }
    }

    /// <summary>Field number for the "timestamps_unix_nano" field.</summary>
    public const int TimestampsUnixNanoFieldNumber = 13;
    private static readonly pb::FieldCodec<ulong> _repeated_timestampsUnixNano_codec
        = pb::FieldCodec.ForUInt64(106);
    private readonly pbc::RepeatedField<ulong> timestampsUnixNano_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// Timestamps associated with Sample represented in nanoseconds. These timestamps are expected
    /// to fall within the Profile's time range. [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> TimestampsUnixNano {
      get { return timestampsUnixNano_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Sample);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Sample other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!locationIndex_.Equals(other.locationIndex_)) return false;
      if (LocationsStartIndex != other.LocationsStartIndex) return false;
      if (LocationsLength != other.LocationsLength) return false;
      if (StacktraceIdIndex != other.StacktraceIdIndex) return false;
      if(!value_.Equals(other.value_)) return false;
      if(!label_.Equals(other.label_)) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      if (Link != other.Link) return false;
      if(!timestampsUnixNano_.Equals(other.timestampsUnixNano_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= locationIndex_.GetHashCode();
      if (LocationsStartIndex != 0UL) hash ^= LocationsStartIndex.GetHashCode();
      if (LocationsLength != 0UL) hash ^= LocationsLength.GetHashCode();
      if (StacktraceIdIndex != 0) hash ^= StacktraceIdIndex.GetHashCode();
      hash ^= value_.GetHashCode();
      hash ^= label_.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (Link != 0UL) hash ^= Link.GetHashCode();
      hash ^= timestampsUnixNano_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      locationIndex_.WriteTo(output, _repeated_locationIndex_codec);
      value_.WriteTo(output, _repeated_value_codec);
      label_.WriteTo(output, _repeated_label_codec);
      if (LocationsStartIndex != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(LocationsStartIndex);
      }
      if (LocationsLength != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(LocationsLength);
      }
      if (StacktraceIdIndex != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(StacktraceIdIndex);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (Link != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(Link);
      }
      timestampsUnixNano_.WriteTo(output, _repeated_timestampsUnixNano_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      locationIndex_.WriteTo(ref output, _repeated_locationIndex_codec);
      value_.WriteTo(ref output, _repeated_value_codec);
      label_.WriteTo(ref output, _repeated_label_codec);
      if (LocationsStartIndex != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(LocationsStartIndex);
      }
      if (LocationsLength != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(LocationsLength);
      }
      if (StacktraceIdIndex != 0) {
        output.WriteRawTag(72);
        output.WriteUInt32(StacktraceIdIndex);
      }
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      if (Link != 0UL) {
        output.WriteRawTag(96);
        output.WriteUInt64(Link);
      }
      timestampsUnixNano_.WriteTo(ref output, _repeated_timestampsUnixNano_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += locationIndex_.CalculateSize(_repeated_locationIndex_codec);
      if (LocationsStartIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LocationsStartIndex);
      }
      if (LocationsLength != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LocationsLength);
      }
      if (StacktraceIdIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(StacktraceIdIndex);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      size += label_.CalculateSize(_repeated_label_codec);
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (Link != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Link);
      }
      size += timestampsUnixNano_.CalculateSize(_repeated_timestampsUnixNano_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Sample other) {
      if (other == null) {
        return;
      }
      locationIndex_.Add(other.locationIndex_);
      if (other.LocationsStartIndex != 0UL) {
        LocationsStartIndex = other.LocationsStartIndex;
      }
      if (other.LocationsLength != 0UL) {
        LocationsLength = other.LocationsLength;
      }
      if (other.StacktraceIdIndex != 0) {
        StacktraceIdIndex = other.StacktraceIdIndex;
      }
      value_.Add(other.value_);
      label_.Add(other.label_);
      attributes_.Add(other.attributes_);
      if (other.Link != 0UL) {
        Link = other.Link;
      }
      timestampsUnixNano_.Add(other.timestampsUnixNano_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            locationIndex_.AddEntriesFrom(input, _repeated_locationIndex_codec);
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
          case 26: {
            label_.AddEntriesFrom(input, _repeated_label_codec);
            break;
          }
          case 56: {
            LocationsStartIndex = input.ReadUInt64();
            break;
          }
          case 64: {
            LocationsLength = input.ReadUInt64();
            break;
          }
          case 72: {
            StacktraceIdIndex = input.ReadUInt32();
            break;
          }
          case 82:
          case 80: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
          case 96: {
            Link = input.ReadUInt64();
            break;
          }
          case 106:
          case 104: {
            timestampsUnixNano_.AddEntriesFrom(input, _repeated_timestampsUnixNano_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            locationIndex_.AddEntriesFrom(ref input, _repeated_locationIndex_codec);
            break;
          }
          case 18:
          case 16: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
          case 26: {
            label_.AddEntriesFrom(ref input, _repeated_label_codec);
            break;
          }
          case 56: {
            LocationsStartIndex = input.ReadUInt64();
            break;
          }
          case 64: {
            LocationsLength = input.ReadUInt64();
            break;
          }
          case 72: {
            StacktraceIdIndex = input.ReadUInt32();
            break;
          }
          case 82:
          case 80: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
          case 96: {
            Link = input.ReadUInt64();
            break;
          }
          case 106:
          case 104: {
            timestampsUnixNano_.AddEntriesFrom(ref input, _repeated_timestampsUnixNano_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides additional context for a sample,
  /// such as thread ID or allocation size, with optional units. [deprecated]
  /// </summary>
  public sealed partial class Label : pb::IMessage<Label>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Label> _parser = new pb::MessageParser<Label>(() => new Label());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Label> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Label() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Label(Label other) : this() {
      key_ = other.key_;
      str_ = other.str_;
      num_ = other.num_;
      numUnit_ = other.numUnit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Label Clone() {
      return new Label(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private long key_;
    /// <summary>
    /// Index into string table
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "str" field.</summary>
    public const int StrFieldNumber = 2;
    private long str_;
    /// <summary>
    /// At most one of the following must be present
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Str {
      get { return str_; }
      set {
        str_ = value;
      }
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 3;
    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    /// <summary>Field number for the "num_unit" field.</summary>
    public const int NumUnitFieldNumber = 4;
    private long numUnit_;
    /// <summary>
    /// Should only be present when num is present.
    /// Specifies the units of num.
    /// Use arbitrary string (for example, "requests") as a custom count unit.
    /// If no unit is specified, consumer may apply heuristic to deduce the unit.
    /// Consumers may also  interpret units like "bytes" and "kilobytes" as memory
    /// units and units like "seconds" and "nanoseconds" as time units,
    /// and apply appropriate unit conversions to these.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NumUnit {
      get { return numUnit_; }
      set {
        numUnit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Label);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Label other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Str != other.Str) return false;
      if (Num != other.Num) return false;
      if (NumUnit != other.NumUnit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0L) hash ^= Key.GetHashCode();
      if (Str != 0L) hash ^= Str.GetHashCode();
      if (Num != 0L) hash ^= Num.GetHashCode();
      if (NumUnit != 0L) hash ^= NumUnit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (Str != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Str);
      }
      if (Num != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Num);
      }
      if (NumUnit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NumUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Key);
      }
      if (Str != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Str);
      }
      if (Num != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Num);
      }
      if (NumUnit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NumUnit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Key);
      }
      if (Str != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Str);
      }
      if (Num != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (NumUnit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NumUnit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Label other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0L) {
        Key = other.Key;
      }
      if (other.Str != 0L) {
        Str = other.Str;
      }
      if (other.Num != 0L) {
        Num = other.Num;
      }
      if (other.NumUnit != 0L) {
        NumUnit = other.NumUnit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 16: {
            Str = input.ReadInt64();
            break;
          }
          case 24: {
            Num = input.ReadInt64();
            break;
          }
          case 32: {
            NumUnit = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt64();
            break;
          }
          case 16: {
            Str = input.ReadInt64();
            break;
          }
          case 24: {
            Num = input.ReadInt64();
            break;
          }
          case 32: {
            NumUnit = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes the mapping of a binary in memory, including its address range,
  /// file offset, and metadata like build ID
  /// </summary>
  public sealed partial class Mapping : pb::IMessage<Mapping>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Mapping> _parser = new pb::MessageParser<Mapping>(() => new Mapping());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Mapping> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mapping() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mapping(Mapping other) : this() {
      id_ = other.id_;
      memoryStart_ = other.memoryStart_;
      memoryLimit_ = other.memoryLimit_;
      fileOffset_ = other.fileOffset_;
      filename_ = other.filename_;
      buildId_ = other.buildId_;
      buildIdKind_ = other.buildIdKind_;
      attributes_ = other.attributes_.Clone();
      hasFunctions_ = other.hasFunctions_;
      hasFilenames_ = other.hasFilenames_;
      hasLineNumbers_ = other.hasLineNumbers_;
      hasInlineFrames_ = other.hasInlineFrames_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mapping Clone() {
      return new Mapping(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// Unique nonzero id for the mapping. [deprecated]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "memory_start" field.</summary>
    public const int MemoryStartFieldNumber = 2;
    private ulong memoryStart_;
    /// <summary>
    /// Address at which the binary (or DLL) is loaded into memory.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemoryStart {
      get { return memoryStart_; }
      set {
        memoryStart_ = value;
      }
    }

    /// <summary>Field number for the "memory_limit" field.</summary>
    public const int MemoryLimitFieldNumber = 3;
    private ulong memoryLimit_;
    /// <summary>
    /// The limit of the address range occupied by this mapping.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemoryLimit {
      get { return memoryLimit_; }
      set {
        memoryLimit_ = value;
      }
    }

    /// <summary>Field number for the "file_offset" field.</summary>
    public const int FileOffsetFieldNumber = 4;
    private ulong fileOffset_;
    /// <summary>
    /// Offset in the binary that corresponds to the first mapped address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FileOffset {
      get { return fileOffset_; }
      set {
        fileOffset_ = value;
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 5;
    private long filename_;
    /// <summary>
    /// The object this entry is loaded from.  This can be a filename on
    /// disk for the main binary and shared libraries, or virtual
    /// abstractions like "[vdso]".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Filename {
      get { return filename_; }
      set {
        filename_ = value;
      }
    }

    /// <summary>Field number for the "build_id" field.</summary>
    public const int BuildIdFieldNumber = 6;
    private long buildId_;
    /// <summary>
    /// A string that uniquely identifies a particular program version
    /// with high probability. E.g., for binaries generated by GNU tools,
    /// it could be the contents of the .note.gnu.build-id field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BuildId {
      get { return buildId_; }
      set {
        buildId_ = value;
      }
    }

    /// <summary>Field number for the "build_id_kind" field.</summary>
    public const int BuildIdKindFieldNumber = 11;
    private global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind buildIdKind_ = global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind.BuildIdLinker;
    /// <summary>
    /// Specifies the kind of build id. See BuildIdKind enum for more details [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind BuildIdKind {
      get { return buildIdKind_; }
      set {
        buildIdKind_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 12;
    private static readonly pb::FieldCodec<ulong> _repeated_attributes_codec
        = pb::FieldCodec.ForUInt64(98);
    private readonly pbc::RepeatedField<ulong> attributes_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// References to attributes in Profile.attribute_table. [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Attributes {
      get { return attributes_; }
    }

    /// <summary>Field number for the "has_functions" field.</summary>
    public const int HasFunctionsFieldNumber = 7;
    private bool hasFunctions_;
    /// <summary>
    /// The following fields indicate the resolution of symbolic info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFunctions {
      get { return hasFunctions_; }
      set {
        hasFunctions_ = value;
      }
    }

    /// <summary>Field number for the "has_filenames" field.</summary>
    public const int HasFilenamesFieldNumber = 8;
    private bool hasFilenames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFilenames {
      get { return hasFilenames_; }
      set {
        hasFilenames_ = value;
      }
    }

    /// <summary>Field number for the "has_line_numbers" field.</summary>
    public const int HasLineNumbersFieldNumber = 9;
    private bool hasLineNumbers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLineNumbers {
      get { return hasLineNumbers_; }
      set {
        hasLineNumbers_ = value;
      }
    }

    /// <summary>Field number for the "has_inline_frames" field.</summary>
    public const int HasInlineFramesFieldNumber = 10;
    private bool hasInlineFrames_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInlineFrames {
      get { return hasInlineFrames_; }
      set {
        hasInlineFrames_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Mapping);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Mapping other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MemoryStart != other.MemoryStart) return false;
      if (MemoryLimit != other.MemoryLimit) return false;
      if (FileOffset != other.FileOffset) return false;
      if (Filename != other.Filename) return false;
      if (BuildId != other.BuildId) return false;
      if (BuildIdKind != other.BuildIdKind) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      if (HasFunctions != other.HasFunctions) return false;
      if (HasFilenames != other.HasFilenames) return false;
      if (HasLineNumbers != other.HasLineNumbers) return false;
      if (HasInlineFrames != other.HasInlineFrames) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (MemoryStart != 0UL) hash ^= MemoryStart.GetHashCode();
      if (MemoryLimit != 0UL) hash ^= MemoryLimit.GetHashCode();
      if (FileOffset != 0UL) hash ^= FileOffset.GetHashCode();
      if (Filename != 0L) hash ^= Filename.GetHashCode();
      if (BuildId != 0L) hash ^= BuildId.GetHashCode();
      if (BuildIdKind != global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind.BuildIdLinker) hash ^= BuildIdKind.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (HasFunctions != false) hash ^= HasFunctions.GetHashCode();
      if (HasFilenames != false) hash ^= HasFilenames.GetHashCode();
      if (HasLineNumbers != false) hash ^= HasLineNumbers.GetHashCode();
      if (HasInlineFrames != false) hash ^= HasInlineFrames.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (MemoryStart != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MemoryStart);
      }
      if (MemoryLimit != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MemoryLimit);
      }
      if (FileOffset != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(FileOffset);
      }
      if (Filename != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Filename);
      }
      if (BuildId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BuildId);
      }
      if (HasFunctions != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasFunctions);
      }
      if (HasFilenames != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasFilenames);
      }
      if (HasLineNumbers != false) {
        output.WriteRawTag(72);
        output.WriteBool(HasLineNumbers);
      }
      if (HasInlineFrames != false) {
        output.WriteRawTag(80);
        output.WriteBool(HasInlineFrames);
      }
      if (BuildIdKind != global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind.BuildIdLinker) {
        output.WriteRawTag(88);
        output.WriteEnum((int) BuildIdKind);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (MemoryStart != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MemoryStart);
      }
      if (MemoryLimit != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MemoryLimit);
      }
      if (FileOffset != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(FileOffset);
      }
      if (Filename != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Filename);
      }
      if (BuildId != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(BuildId);
      }
      if (HasFunctions != false) {
        output.WriteRawTag(56);
        output.WriteBool(HasFunctions);
      }
      if (HasFilenames != false) {
        output.WriteRawTag(64);
        output.WriteBool(HasFilenames);
      }
      if (HasLineNumbers != false) {
        output.WriteRawTag(72);
        output.WriteBool(HasLineNumbers);
      }
      if (HasInlineFrames != false) {
        output.WriteRawTag(80);
        output.WriteBool(HasInlineFrames);
      }
      if (BuildIdKind != global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind.BuildIdLinker) {
        output.WriteRawTag(88);
        output.WriteEnum((int) BuildIdKind);
      }
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (MemoryStart != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemoryStart);
      }
      if (MemoryLimit != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemoryLimit);
      }
      if (FileOffset != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FileOffset);
      }
      if (Filename != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Filename);
      }
      if (BuildId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BuildId);
      }
      if (BuildIdKind != global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind.BuildIdLinker) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) BuildIdKind);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (HasFunctions != false) {
        size += 1 + 1;
      }
      if (HasFilenames != false) {
        size += 1 + 1;
      }
      if (HasLineNumbers != false) {
        size += 1 + 1;
      }
      if (HasInlineFrames != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Mapping other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.MemoryStart != 0UL) {
        MemoryStart = other.MemoryStart;
      }
      if (other.MemoryLimit != 0UL) {
        MemoryLimit = other.MemoryLimit;
      }
      if (other.FileOffset != 0UL) {
        FileOffset = other.FileOffset;
      }
      if (other.Filename != 0L) {
        Filename = other.Filename;
      }
      if (other.BuildId != 0L) {
        BuildId = other.BuildId;
      }
      if (other.BuildIdKind != global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind.BuildIdLinker) {
        BuildIdKind = other.BuildIdKind;
      }
      attributes_.Add(other.attributes_);
      if (other.HasFunctions != false) {
        HasFunctions = other.HasFunctions;
      }
      if (other.HasFilenames != false) {
        HasFilenames = other.HasFilenames;
      }
      if (other.HasLineNumbers != false) {
        HasLineNumbers = other.HasLineNumbers;
      }
      if (other.HasInlineFrames != false) {
        HasInlineFrames = other.HasInlineFrames;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            MemoryStart = input.ReadUInt64();
            break;
          }
          case 24: {
            MemoryLimit = input.ReadUInt64();
            break;
          }
          case 32: {
            FileOffset = input.ReadUInt64();
            break;
          }
          case 40: {
            Filename = input.ReadInt64();
            break;
          }
          case 48: {
            BuildId = input.ReadInt64();
            break;
          }
          case 56: {
            HasFunctions = input.ReadBool();
            break;
          }
          case 64: {
            HasFilenames = input.ReadBool();
            break;
          }
          case 72: {
            HasLineNumbers = input.ReadBool();
            break;
          }
          case 80: {
            HasInlineFrames = input.ReadBool();
            break;
          }
          case 88: {
            BuildIdKind = (global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind) input.ReadEnum();
            break;
          }
          case 98:
          case 96: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            MemoryStart = input.ReadUInt64();
            break;
          }
          case 24: {
            MemoryLimit = input.ReadUInt64();
            break;
          }
          case 32: {
            FileOffset = input.ReadUInt64();
            break;
          }
          case 40: {
            Filename = input.ReadInt64();
            break;
          }
          case 48: {
            BuildId = input.ReadInt64();
            break;
          }
          case 56: {
            HasFunctions = input.ReadBool();
            break;
          }
          case 64: {
            HasFilenames = input.ReadBool();
            break;
          }
          case 72: {
            HasLineNumbers = input.ReadBool();
            break;
          }
          case 80: {
            HasInlineFrames = input.ReadBool();
            break;
          }
          case 88: {
            BuildIdKind = (global::OpenTelemetry.Proto.Profiles.V1Experimental.BuildIdKind) input.ReadEnum();
            break;
          }
          case 98:
          case 96: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes function and line table debug information.
  /// </summary>
  public sealed partial class Location : pb::IMessage<Location>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Location> _parser = new pb::MessageParser<Location>(() => new Location());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Location> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location(Location other) : this() {
      id_ = other.id_;
      mappingIndex_ = other.mappingIndex_;
      address_ = other.address_;
      line_ = other.line_.Clone();
      isFolded_ = other.isFolded_;
      typeIndex_ = other.typeIndex_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Location Clone() {
      return new Location(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// Unique nonzero id for the location.  A profile could use
    /// instruction addresses or any integer sequence as ids. [deprecated]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "mapping_index" field.</summary>
    public const int MappingIndexFieldNumber = 2;
    private ulong mappingIndex_;
    /// <summary>
    /// The index of the corresponding profile.Mapping for this location.
    /// It can be unset if the mapping is unknown or not applicable for
    /// this profile type.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MappingIndex {
      get { return mappingIndex_; }
      set {
        mappingIndex_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private ulong address_;
    /// <summary>
    /// The instruction address for this location, if available.  It
    /// should be within [Mapping.memory_start...Mapping.memory_limit]
    /// for the corresponding mapping. A non-leaf address may be in the
    /// middle of a call instruction. It is up to display tools to find
    /// the beginning of the instruction if necessary.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "line" field.</summary>
    public const int LineFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenTelemetry.Proto.Profiles.V1Experimental.Line> _repeated_line_codec
        = pb::FieldCodec.ForMessage(34, global::OpenTelemetry.Proto.Profiles.V1Experimental.Line.Parser);
    private readonly pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Line> line_ = new pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Line>();
    /// <summary>
    /// Multiple line indicates this location has inlined functions,
    /// where the last entry represents the caller into which the
    /// preceding entries were inlined.
    ///
    /// E.g., if memcpy() is inlined into printf:
    ///    line[0].function_name == "memcpy"
    ///    line[1].function_name == "printf"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenTelemetry.Proto.Profiles.V1Experimental.Line> Line {
      get { return line_; }
    }

    /// <summary>Field number for the "is_folded" field.</summary>
    public const int IsFoldedFieldNumber = 5;
    private bool isFolded_;
    /// <summary>
    /// Provides an indication that multiple symbols map to this location's
    /// address, for example due to identical code folding by the linker. In that
    /// case the line information above represents one of the multiple
    /// symbols. This field must be recomputed when the symbolization state of the
    /// profile changes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFolded {
      get { return isFolded_; }
      set {
        isFolded_ = value;
      }
    }

    /// <summary>Field number for the "type_index" field.</summary>
    public const int TypeIndexFieldNumber = 6;
    private uint typeIndex_;
    /// <summary>
    /// Type of frame (e.g. kernel, native, python, hotspot, php). Index into string table.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TypeIndex {
      get { return typeIndex_; }
      set {
        typeIndex_ = value;
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 7;
    private static readonly pb::FieldCodec<ulong> _repeated_attributes_codec
        = pb::FieldCodec.ForUInt64(58);
    private readonly pbc::RepeatedField<ulong> attributes_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// References to attributes in Profile.attribute_table. [optional]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<ulong> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Location);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Location other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (MappingIndex != other.MappingIndex) return false;
      if (Address != other.Address) return false;
      if(!line_.Equals(other.line_)) return false;
      if (IsFolded != other.IsFolded) return false;
      if (TypeIndex != other.TypeIndex) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (MappingIndex != 0UL) hash ^= MappingIndex.GetHashCode();
      if (Address != 0UL) hash ^= Address.GetHashCode();
      hash ^= line_.GetHashCode();
      if (IsFolded != false) hash ^= IsFolded.GetHashCode();
      if (TypeIndex != 0) hash ^= TypeIndex.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (MappingIndex != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MappingIndex);
      }
      if (Address != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Address);
      }
      line_.WriteTo(output, _repeated_line_codec);
      if (IsFolded != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsFolded);
      }
      if (TypeIndex != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TypeIndex);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (MappingIndex != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MappingIndex);
      }
      if (Address != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Address);
      }
      line_.WriteTo(ref output, _repeated_line_codec);
      if (IsFolded != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsFolded);
      }
      if (TypeIndex != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(TypeIndex);
      }
      attributes_.WriteTo(ref output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (MappingIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MappingIndex);
      }
      if (Address != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Address);
      }
      size += line_.CalculateSize(_repeated_line_codec);
      if (IsFolded != false) {
        size += 1 + 1;
      }
      if (TypeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TypeIndex);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Location other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.MappingIndex != 0UL) {
        MappingIndex = other.MappingIndex;
      }
      if (other.Address != 0UL) {
        Address = other.Address;
      }
      line_.Add(other.line_);
      if (other.IsFolded != false) {
        IsFolded = other.IsFolded;
      }
      if (other.TypeIndex != 0) {
        TypeIndex = other.TypeIndex;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            MappingIndex = input.ReadUInt64();
            break;
          }
          case 24: {
            Address = input.ReadUInt64();
            break;
          }
          case 34: {
            line_.AddEntriesFrom(input, _repeated_line_codec);
            break;
          }
          case 40: {
            IsFolded = input.ReadBool();
            break;
          }
          case 48: {
            TypeIndex = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            MappingIndex = input.ReadUInt64();
            break;
          }
          case 24: {
            Address = input.ReadUInt64();
            break;
          }
          case 34: {
            line_.AddEntriesFrom(ref input, _repeated_line_codec);
            break;
          }
          case 40: {
            IsFolded = input.ReadBool();
            break;
          }
          case 48: {
            TypeIndex = input.ReadUInt32();
            break;
          }
          case 58:
          case 56: {
            attributes_.AddEntriesFrom(ref input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Details a specific line in a source code, linked to a function.
  /// </summary>
  public sealed partial class Line : pb::IMessage<Line>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Line> _parser = new pb::MessageParser<Line>(() => new Line());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Line> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Line() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Line(Line other) : this() {
      functionIndex_ = other.functionIndex_;
      line_ = other.line_;
      column_ = other.column_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Line Clone() {
      return new Line(this);
    }

    /// <summary>Field number for the "function_index" field.</summary>
    public const int FunctionIndexFieldNumber = 1;
    private ulong functionIndex_;
    /// <summary>
    /// The index of the corresponding profile.Function for this line.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FunctionIndex {
      get { return functionIndex_; }
      set {
        functionIndex_ = value;
      }
    }

    /// <summary>Field number for the "line" field.</summary>
    public const int Line_FieldNumber = 2;
    private long line_;
    /// <summary>
    /// Line number in source code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Line_ {
      get { return line_; }
      set {
        line_ = value;
      }
    }

    /// <summary>Field number for the "column" field.</summary>
    public const int ColumnFieldNumber = 3;
    private long column_;
    /// <summary>
    /// Column number in source code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Column {
      get { return column_; }
      set {
        column_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Line);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Line other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionIndex != other.FunctionIndex) return false;
      if (Line_ != other.Line_) return false;
      if (Column != other.Column) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionIndex != 0UL) hash ^= FunctionIndex.GetHashCode();
      if (Line_ != 0L) hash ^= Line_.GetHashCode();
      if (Column != 0L) hash ^= Column.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FunctionIndex != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FunctionIndex);
      }
      if (Line_ != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Line_);
      }
      if (Column != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Column);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FunctionIndex != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(FunctionIndex);
      }
      if (Line_ != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Line_);
      }
      if (Column != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Column);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (FunctionIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FunctionIndex);
      }
      if (Line_ != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Line_);
      }
      if (Column != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Column);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Line other) {
      if (other == null) {
        return;
      }
      if (other.FunctionIndex != 0UL) {
        FunctionIndex = other.FunctionIndex;
      }
      if (other.Line_ != 0L) {
        Line_ = other.Line_;
      }
      if (other.Column != 0L) {
        Column = other.Column;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            FunctionIndex = input.ReadUInt64();
            break;
          }
          case 16: {
            Line_ = input.ReadInt64();
            break;
          }
          case 24: {
            Column = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            FunctionIndex = input.ReadUInt64();
            break;
          }
          case 16: {
            Line_ = input.ReadInt64();
            break;
          }
          case 24: {
            Column = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Describes a function, including its human-readable name, system name,
  /// source file, and starting line number in the source.
  /// </summary>
  public sealed partial class Function : pb::IMessage<Function>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Function> _parser = new pb::MessageParser<Function>(() => new Function());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Function> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenTelemetry.Proto.Profiles.V1Experimental.PprofextendedReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Function() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Function(Function other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      systemName_ = other.systemName_;
      filename_ = other.filename_;
      startLine_ = other.startLine_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Function Clone() {
      return new Function(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private ulong id_;
    /// <summary>
    /// Unique nonzero id for the function. [deprecated]
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private long name_;
    /// <summary>
    /// Name of the function, in human-readable form if available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "system_name" field.</summary>
    public const int SystemNameFieldNumber = 3;
    private long systemName_;
    /// <summary>
    /// Name of the function, as identified by the system.
    /// For instance, it can be a C++ mangled name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SystemName {
      get { return systemName_; }
      set {
        systemName_ = value;
      }
    }

    /// <summary>Field number for the "filename" field.</summary>
    public const int FilenameFieldNumber = 4;
    private long filename_;
    /// <summary>
    /// Source file containing the function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Filename {
      get { return filename_; }
      set {
        filename_ = value;
      }
    }

    /// <summary>Field number for the "start_line" field.</summary>
    public const int StartLineFieldNumber = 5;
    private long startLine_;
    /// <summary>
    /// Line number in source file.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StartLine {
      get { return startLine_; }
      set {
        startLine_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Function);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Function other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (SystemName != other.SystemName) return false;
      if (Filename != other.Filename) return false;
      if (StartLine != other.StartLine) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0UL) hash ^= Id.GetHashCode();
      if (Name != 0L) hash ^= Name.GetHashCode();
      if (SystemName != 0L) hash ^= SystemName.GetHashCode();
      if (Filename != 0L) hash ^= Filename.GetHashCode();
      if (StartLine != 0L) hash ^= StartLine.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Name != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Name);
      }
      if (SystemName != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(SystemName);
      }
      if (Filename != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Filename);
      }
      if (StartLine != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StartLine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (Name != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Name);
      }
      if (SystemName != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(SystemName);
      }
      if (Filename != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Filename);
      }
      if (StartLine != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StartLine);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (Name != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Name);
      }
      if (SystemName != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SystemName);
      }
      if (Filename != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Filename);
      }
      if (StartLine != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartLine);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Function other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0UL) {
        Id = other.Id;
      }
      if (other.Name != 0L) {
        Name = other.Name;
      }
      if (other.SystemName != 0L) {
        SystemName = other.SystemName;
      }
      if (other.Filename != 0L) {
        Filename = other.Filename;
      }
      if (other.StartLine != 0L) {
        StartLine = other.StartLine;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Name = input.ReadInt64();
            break;
          }
          case 24: {
            SystemName = input.ReadInt64();
            break;
          }
          case 32: {
            Filename = input.ReadInt64();
            break;
          }
          case 40: {
            StartLine = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Name = input.ReadInt64();
            break;
          }
          case 24: {
            SystemName = input.ReadInt64();
            break;
          }
          case 32: {
            Filename = input.ReadInt64();
            break;
          }
          case 40: {
            StartLine = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
